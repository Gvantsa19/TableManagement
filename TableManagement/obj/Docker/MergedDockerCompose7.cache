name: dockercompose3664063622967958873
services:
  tms.api:
    build:
      context: C:\Users\user\Desktop\New folder\TableManagement\table-management\TableManagement
      dockerfile: TMS.API/Dockerfile
    container_name: tms.api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__Connection: Host=tms.database;Port=5432;Database=TableManagement;Username=postgres;Password=admin;Pooling=true;
    image: tmsapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    - mode: ingress
      target: 8081
      published: "8081"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\user\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\user\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  tms.database:
    container_name: tms.database
    environment:
      POSTGRES_DB: TableManagement
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\user\Desktop\New folder\TableManagement\table-management\TableManagement\.containers\TableManagement
      target: /var/lib/postgresql/data
      bind:
        create_host_path: true
networks:
  backend:
    name: dockercompose3664063622967958873_backend